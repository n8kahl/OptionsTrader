version: "3.9"

services:
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    restart: unless-stopped

  ingest:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && python -m services.ingest.main"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "ingest"]
      interval: 30s
      timeout: 5s
      retries: 3

  features:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && python -m services.features.main"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      ingest:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "features"]
      interval: 30s
      timeout: 5s
      retries: 3

  signals:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && python -m services.signals.main"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      features:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "signals"]
      interval: 30s
      timeout: 5s
      retries: 3

  risk:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && python -m services.risk.main"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      signals:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "risk"]
      interval: 30s
      timeout: 5s
      retries: 3

  oms:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && python -m services.oms.main"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      risk:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "oms"]
      interval: 30s
      timeout: 5s
      retries: 3

  execution:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && python -m services.execution.main"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      oms:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "execution"]
      interval: 30s
      timeout: 5s
      retries: 3

  learner:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && python -m services.learner.main"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      oms:
        condition: service_healthy
      execution:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "learner"]
      interval: 30s
      timeout: 5s
      retries: 3

  backtest:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && python -m services.backtest.main"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      learner:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "backtest"]
      interval: 30s
      timeout: 5s
      retries: 3

  dashboard:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./:/app
      - ./config:/app/config
      - ./storage:/app/storage
      - ./data:/app/data
    command: ["bash", "-lc", "pip install -e . && streamlit run services/dashboard/app.py --server.port 8501 --server.address 0.0.0.0"]
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    restart: unless-stopped
    ports:
      - "8501:8501"
    depends_on:
      redis:
        condition: service_started
      learner:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "ops/healthcheck.sh", "dashboard"]
      interval: 30s
      timeout: 5s
      retries: 3
